name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: [amd64]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'

      - name: Build binary
        run: |
          mkdir -p dist
          if [ "${{ matrix.goarch }}" = "arm64" ]; then
            echo "Building ARM64 binary using Docker"
            docker run --rm -v $PWD:/src -w /src --platform linux/arm64 golang:1.23 \
            bash -c "CGO_ENABLED=1 GOOS=linux GOARCH=arm64 go build -ldflags '-s -w' -o dist/migrate-v2-linux-arm64 ."
          else
            echo "Building AMD64 binary natively"
            CGO_ENABLED=1 GOOS=linux GOARCH=amd64 \
            go build -ldflags "-s -w" -o dist/migrate-v2-linux-amd64 .
          fi

      - name: Package binary with tar.gz
        run: |
          for bin in dist/migrate-v2-linux-*; do
            tar -czf "${bin}.tar.gz" -C dist "$(basename $bin)"
            sha256sum "${bin}.tar.gz" > "${bin}.sha256"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: migrate-v2-${{ matrix.goarch }}
          path: |
            dist/migrate-v2-linux-${{ matrix.goarch }}
            dist/migrate-v2-linux-${{ matrix.goarch }}.tar.gz
            dist/migrate-v2-linux-${{ matrix.goarch }}.sha256

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Generate release notes with SHA256
        run: |
          echo "## SHA256 Checksums" > release-notes.md
          cat dist/*.sha256 >> release-notes.md
          echo -e "\n## Git commits since last tag" >> release-notes.md
          git log $(git describe --tags --abbrev=0 @^)..@ --pretty='* %s (%h)' >> release-notes.md
          cat release-notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**
          body_path: release-notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}