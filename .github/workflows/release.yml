name: Release

on:
  push:
    tags:
      - 'v*'   

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'

      - name: Install cross build deps for linux/arm64
        if: matrix.goos == 'linux' && matrix.goarch == 'arm64'
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu libc6-dev-arm64-cross
          aarch64-linux-gnu-gcc --version

      - name: Build binary
        run: |
          mkdir -p dist
          CC=""
          if [[ "${{ matrix.goos }}" == "linux" && "${{ matrix.goarch }}" == "arm64" ]]; then
            CC=aarch64-linux-gnu-gcc
          fi
          CGO_ENABLED=1 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CC=$CC \
          go build -ldflags "-s -w" -o dist/migrate-v2-${{ matrix.goos }}-${{ matrix.goarch }} .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: migrate-v2-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/migrate-v2-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Generate release notes
        run: |
          git log $(git describe --tags --abbrev=0 @^)..@ --pretty='* %s (%h)' > release-notes.md
          cat release-notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**
          body_path: release-notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}